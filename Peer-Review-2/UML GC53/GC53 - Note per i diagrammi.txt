Per il controller abbiamo deciso di creare la classe Game, che gestisce la partita in corso e i metodi chiamati durante la fase pianificazione. Abbiamo poi creato la classe ActionTurnHandler per gestire il turno azione di un giocatore (in tutte le fasi). Per la gestione dei messaggi da client a server per eseguire mosse abbiamo utilizzato il pattern visitor (i messaggi "accettano" la classe messageVisitor che opera tramite un metodo di visita apposito per ogni messaggio), applicato sia per i messaggi normali (spostamento studenti, scelta nuvola, spostamento madre natura) che per l'uso dei personaggi. Le modifiche effettuate al modello sono comunicate ai giocatori inviando oggetti del pacchetto ClientModel, che contengono versioni degli elementi del modello con le uniche informazioni utili all'utente, anche questi gestiti sfruttando il pattern visitor. I messaggi PlanningTurnMessage e ActionTurnMessage comunicano ai giocatori chi Ã¨ il giocatore corrente. 